services:
  djangodb:
    image: postgres:13.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=unboxr
      - POSTGRES_USER=unboxr
      - POSTGRES_PASSWORD=unboxr
    ports:
      - "5432:5432"

  djangoProd:
    build:
      context: ./backend
      dockerfile: docker/DjangoProductionDockerfile
    image: xlharambe/unboxr-backend:latest
    volumes:
      - .app:/usr/src/django
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - docker/env.prod
    depends_on:
      - djangodb

  redis:
    image: redis:alpine
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
      - redis-conf:/usr/local/etc/redis/redis.conf

  celery:
    build:
      context: ./backend
      dockerfile: docker/CeleryDockerfile
    command: celery -A backend worker --loglevel=debug
    volumes:
      - .app:/usr/src/django
    env_file:
      - docker/env.prod
    depends_on:
      - redis
      - celery-beat

  celery-beat:
    build:
      context: ./backend
      dockerfile: docker/CeleryDockerfile
    command: celery -A backend beat --loglevel=debug --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .app:/usr/src/django
    env_file:
      - docker/env.prod
    depends_on:
      - redis

  celery-flower:
    build:
      context: ./backend
      dockerfile: docker/CeleryDockerfile
    command: celery -A backend flower --port=5566
    volumes:
      - .app:/usr/src/django
    env_file:
      - docker/env.prod
    ports:
      - 5566:5566
    depends_on:
      - celery

  scrapyDatabase:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: unboxr
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017

  scrapyd:
    build:
      context: ./scraper
      dockerfile: docker/ScrapydDockerFile
    image: xlharambe/unboxr-scrapyd-backend:latest
    env_file:
      - docker/env.prod
    ports:
      - 6800:6800
    restart: unless-stopped
    depends_on:
      - scrapyDatabase

  scrapydweb:
    build:
      context: ./scraper
      dockerfile: docker/ScrapydwebDockerFile
    image: xlharambe/unboxr-scrapyd-ui:latest
    environment:
      SCRAPYD_SERVERS: "scrapy:secret@scrapyd:6800#default"
      TARGET: http://scrapyd:6800
      PROJECT: products
    ports:
      - 5000:5000
    restart: unless-stopped
    depends_on:
      - scrapyd

  torProxy1:
    image: 'dperson/torproxy:latest'
    ports:
      - '9990:8118'
    environment:
      - TOR_NewCircuitPeriod=60
      - LOCATION=US
    restart: always

  torProxy2:
    image: 'dperson/torproxy:latest'
    ports:
      - '9991:8888'
    environment:
      - TOR_NewCircuitPeriod=60
      - LOCATION=US
    restart: always

  torProxy3:
    image: 'dperson/torproxy:latest'
    ports:
      - '9992:8888'
    environment:
      - TOR_NewCircuitPeriod=60
      - LOCATION=US
    restart: always

  torProxy4:
    image: 'dperson/torproxy:latest'
    ports:
      - '9993:8888'
    environment:
      - TOR_NewCircuitPeriod=60
      - LOCATION=US
    restart: always

  mjml:
    image: liminspace/mjml-tcpserver:0.11
    restart: always
    env_file:
      - docker/env.prod
    environment:
      PORT: "28102"
      MJML_ARGS: "--mjml.minify=true --mjml.validationLevel=strict"
    expose:
      - "28102"
    ports:
      - "28102:28102"

volumes:
  .app:
  mongodb:
  static_volume:
  media_volume:
  postgres_data:
  redis-data:
  redis-conf:
